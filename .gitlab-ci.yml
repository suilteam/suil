# Build Pipeline for Suil Project
image: suilteam/mecury:alpine

variables:
  SUIL_BUILD_VERSION: $SUIL_MAJOR_VERSION.$SUIL_MINOR_VERSION.$SUIL_PATCH_VERSION

.job_def:
  before_script: &docker_hub_login
    - export DOCKER_HOST=tcp://docker:2375/
    - docker login -u $SUILTEAM_DOCKERHUB_USER -p $SUILTEAM_DOCKERHUB_PASSWD

# Build alpine development image based of docker
build:dev:
  stage: build
  tags:
    - docker
    - linux
  services:
    - docker:dind
  only:
    - master
  # Install all the required dependencies before proceeding to build
  before_script: *docker_hub_login
    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_JOB_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DSUIL_BUILD_UNIT_TEST=ON
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:latest .
    - docker push suilteam/suil-dev:latest
    - cd ..

  cache:
    paths:
      - ./build$CI_COMMIT_TAG/
  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/sut
    expire_in: 30 mins
    
build:prod:
  stage: build
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - master

  before_script: *docker_hub_login

  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-prod:unstable .
    - docker push suilteam/suil-prod:unstable
    - cd ..
    
build:release:dev:alpine:
  stage: build
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags
  # Install all the required dependencies before proceeding to build
  before_script: *docker_hub_login    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    # Build release binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DSUIL_BUILD_UNIT_TEST=ON
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:$SUIL_VERSION_TAG .
    - docker push suilteam/suil-dev:$SUIL_VERSION_TAG

build:release:dev:
  image: suilteam/mecury:ubuntu
  stage: build
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags
    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - rm -rf *.tag.gz
    # Build release binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install package
    # Build debug binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DCMAKE_BUILD_TYPE=Debug
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install package
    - cd ..

  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/suil*tar.gz

build:release:prod:
  stage: build
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags

  before_script: *docker_hub_login

  script:
    # Build release binaries
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - rm -rf *.tag.gz
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-prod:$SUIL_VERSION_TAG .
    - docker push suilteam/suil-prod:$SUIL_VERSION_TAG
    - cd ..
      
test:devel:
  stage: test
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - master
  before_script: *docker_hub_login
  script:
    - docker pull suilteam/suil-dev:latest
    - mkdir sut
    - docker run --rm -i --name "$CI_COMMIT_REF_SLUG"
        -v `pwd`/sut:/tmp/sut sutsuilteam/suil-dev:latest
        /usr/local/bin/sut -r junit -o /tmp/sut/test-${CI_COMMIT_REF_SLUG}.xml
  artifacts:
    reports:
      junit: sut/test-${CI_COMMIT_REF_SLUG}.xml

test:production:
  stage: test
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags
  before_script: *docker_hub_login
  script:
    - docker pull suilteam/suil-dev:$SUIL_BUILD_VERSION
    - mkdir sut
    - docker run --rm -i --name "$CI_COMMIT_REF_SLUG"
        -v `pwd`/sut:/tmp/sut suilteam/suil-dev:$SUIL_VERSION_TAG
        /usr/local/bin/sut -o /tmp/sut/test-${CI_COMMIT_REF_SLUG}.xml
  artifacts:
    reports:
      junit: sut/test-${CI_COMMIT_REF_SLUG}.xml
