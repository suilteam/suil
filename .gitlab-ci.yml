# Build Pipeline for Suil Project
image: suilteam/mecury:alpine

variables:
  SUIL_BUILD_VERSION: $SUIL_MAJOR_VERSION.$SUIL_MINOR_VERSION.$SUIL_PATCH_VERSION

.job_def:
  before_script: &docker_hub_login
    - export DOCKER_HOST=tcp://docker:2375/
    - docker login -u $SUILTEAM_DOCKERHUB_USER -p $SUILTEAM_DOCKERHUB_PASSWD

# Build alpine development image based of docker
build:dev:
  stage: build
  tags:
    - docker
    - linux
  only:
    - merge_requests
    - master
    - tags
    
  script:
    - mkdir -p ./build
    - cd ./build
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_JOB_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DSUIL_BUILD_UNIT_TEST=ON
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install
    
  artifacts:
    expire_in: 2 days
    paths:
      - build/

build:prod:
  stage: build
  tags:
    - docker
    - linux
  only:
    - merge_requests
    - master
    - tags

  script:
    - mkdir -p ./build
    - cd ./build
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install

  artifacts:
    expire_in: 1 day
    paths:
      - build/

build:unittest:dev:
  stage: test
  tags:
    - docker
    - linux
  only:
    - merge_requests
    - master
    - tags
  dependencies:
    - build:dev

  script:
    - mkdir -p ./build
    - cd ./build
    - ./suil/sut -r junit -o sut-test.xml

  artifacts:
    reports:
      junit: build/sut-test.xml

deploy:dev:
  stage: deploy
  tags:
    - docker
    - linux
  services:
    - docker:dind
  only:
    - master
  dependencies:
    - build:dev

  before_script: *docker_hub_login
  script:
    - mkdir -p ./build
    - cd ./build
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:latest .
    - docker push suilteam/suil-dev:latest
    - cd ..

deploy:prod:
  stage: deploy
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - master
  dependencies:
    - build:prod

  before_script: *docker_hub_login
  script:
    - mkdir -p ./build
    - cd ./build
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:unstable .
    - docker push suilteam/suil-dev:unstable
    - cd ..

deploy:release:dev:
  stage: deploy
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags
  dependencies:
    - build:dev

  before_script: *docker_hub_login
  script:
    - mkdir -p ./build
    - cd ./build
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:$SUIL_VERSION_TAG .
    - docker push suilteam/suil-dev:$SUIL_VERSION_TAG

deploy:release:prod:
  stage: deploy
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags
  dependencies:
    - build:prod

  before_script: *docker_hub_login
  script:
    - mkdir -p ./build
    - cd ./build
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:$SUIL_VERSION_TAG .
    - docker push suilteam/suil-dev:$SUIL_VERSION_TAG

build:release:dev:
  image: suilteam/mecury:ubuntu
  stage: build
  services:
    - docker:dind
  tags:
    - docker
    - linux
  only:
    - tags
    
  script:
    - mkdir -p ./build
    - cd ./build
    - rm -rf *.tag.gz
    # Build release binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install package
    # Build debug binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DSUIL_BUILD_UNIT_TEST=ON
       -DCMAKE_BUILD_TYPE=Debug
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - rm -rf `pwd`/artifacts
    - make clean install package
    - cd ..
    - ./suil/sut -r junit -o sut-test.xml

  artifacts:
    paths:
      - ./build/suil*tar.gz
    reports:
      junit: build/sut-test.xml